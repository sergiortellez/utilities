Every time I need a new project use this workflow: 

1. Use the terminal to open the location of the new project. 
2. Create a new folder using 'mkdir new_folder'
3. Use the vite command to create the content in the new folder 'npm create vite@latest project-name'
4. Install all the node_modules dependencies: 'npm install'
5. Init git in the folder using 'git init'
6. Create a new repo using GitHub cli tool: 'gh repo create my-new-repo --private'
7. Connect the local project to the remote repo: 'git remote add origin https://github.com/<github-username>/<repository-name>.git'
8. check that the origin is being added: 'git remote -v'
9. Add dev-network.sh file to the root of the  repository 'touch dev-network.sh'
10. Add our custom script to the dev-network file:





	#!/bin/bash
	# Get the current IP address on macOS
	IP=$(ipconfig getifaddr "$(route get default | awk '/interface: / { print $2 }')")

	# Kill any process using Vite's default port (5173 for Vite)
	lsof -ti:5173 | xargs kill -9 2>/dev/null

	# Construct the full URL
	URL="http://$IP:5173"

	# Start the Vite app without opening a browser
	BROWSER=none npm run dev &

	# Wait for the server to start
	sleep 5

	# AppleScript to check if Google Chrome is running
	APPLESCRIPT_CHECK_APP="
	if application \"Google Chrome\" is running then
    	return true
	else
    	return false
	end if
	"

	# AppleScript to open the URL in an existing or new window
	APPLESCRIPT_OPEN_URL="
	tell application \"Google Chrome\"
    if (count of windows) > 0 then
        set theTab to make new tab at the end of tabs of front window
        set URL of theTab to \"$URL\"
    else
        make new window
        set URL of active tab of front window to \"$URL\"
    end if
    activate
	end tell
	"

	# Check if Google Chrome is running
	IS_RUNNING=$(osascript -e "$APPLESCRIPT_CHECK_APP")

	if [ "$IS_RUNNING" = "true" ]; then
    # Open URL in existing Chrome window
   	 osascript -e "$APPLESCRIPT_OPEN_URL"
    
    osascript -e '
    tell application "Google Chrome"
        activate
        tell application "System Events"
            keystroke "i" using {command down, option down}
        end tell
    end tell
    '
	else
    # Start Google Chrome and open the URL
    open -a "Google Chrome" "$URL"
	fi

	# Open the URL in Safari
	osascript -e "
	tell application \"Safari\"
    activate
    tell window 1
        set current tab to tab 1
        set URL of current tab to \"$URL\"
    end tell
	end tell
	"

	# Enter Responsive Design Mode in Safari
	osascript -e '
	tell application "Safari"
    activate
    tell application "System Events"
        keystroke "r" using {control down, command down}
    end tell
	end tell
	'

	# Copy the URL to the clipboard
	echo $URL | pbcopy

	echo "Development server running on network and copied to clipboard."



	#                  üÜÅüÖ¥üÖ∞üÖ≥ üÖºüÖ¥

	# Don't forget to adjust the scripts in package.json accordingly:

	# "scripts": {
	#   "dev": "vite", // This is the default script for starting a Vite project
	#   "start-network": "./start-network.sh"
	# }

	# And the first time, you must run this command to give execution permissions:
	# chmod +x start-network.sh








11. Modify package.json: 
	-Include the following configuration in package.json:
		export default defineConfig({
  		server: {
    			host: '0.0.0.0'
  			},
  			// ... other options
		});
12. Add a Script to package.json:
	-Add the following script to the scripts section of package.json:
	
	{
  		"scripts": {
    		"dev-network": "./dev-network.sh"
  		}
	}
	
13. Run the custom script for the first time: 'chmod +x dev-network.sh'
	
14. Run the project 'npm run start-network'
